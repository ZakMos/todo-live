{"version":3,"sources":["registerServiceWorker.js","models/todo.js","modules/reducers.js","modules/storage.js","modules/helpers.js","modules/constants.js","components/TodoListItem.jsx","modules/actions.js","components/TodoList.jsx","components/TodoForm.jsx","components/Filter.jsx","views/Home.jsx","views/NotFound.jsx","views/Help.jsx","components/Header.jsx","components/Footer.jsx","components/Clock.jsx","components/TodoHeader.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Todo","text","id","this","uuid","done","todos","action","type","todo","newState","Storage","key","canUseStorage","Error","fallback","jsonString","localStorage","getItem","JSON","parse","data","stringify","setItem","removeItem","e","getRandomFromArray","array","min","max","length","Math","ceil","floor","random","FILTERS","ALL","COMPLETE","INCOMPLETE","TodoListItem","editTodo","event","props","updateTodo","currentTarget","value","trim","toggleTodo","removeTodo","className","defaultValue","checked","onChange","htmlFor","icon","faTrashAlt","onClick","Component","mapActionsToProps","connect","TodoList","filter","items","map","item","Object","values","TodoForm","todoInput","React","createRef","createTodo","preventDefault","addTodo","todoText","current","alert","target","reset","onSubmit","name","placeholder","ref","faPlus","Filter","filterList","role","aria-label","i","NavLink","to","activeClassName","string","charAt","toUpperCase","slice","Home","document","title","params","NotFound","Help","Header","faClipboardList","Footer","href","rel","faInstagram","size","faTwitterSquare","faFacebookSquare","faLinkedin","faInternetExplorer","Clock","date","Date","setState","timerID","setInterval","tick","clearInterval","toLocaleTimeString","TodoHeader","tagline","Button","color","faQuestionCircle","UncontrolledCollapse","toggler","Card","CardBody","App","randomTagline","filterOptions","join","Switch","Route","exact","path","component","storage","store","createStore","load","__REDUX_DEVTOOLS_EXTENSION__","subscribe","save","getState","render","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b6665fb0.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import uuid from 'uuid/v4';\n\n/**\n * A Todo object model\n */\nclass Todo {\n  /**\n   * Instantiates a Todo object\n   * @param {string} text The text of the todo to create\n   * @param {string} id   A uuid for the todo (will default to a new uuid)\n   */\n  constructor({text, id}){\n    /**\n     * The todo's text value\n     * @type {string}\n     */\n    this.text = text;\n    /**\n     * The todo's uuid\n     * @type {string}\n     */\n    this.id = id || uuid();\n    /**\n     * A bool to indicate whether the tdod is done\n     * @type {Boolean}\n     */\n    this.done = false;\n  }\n}\n\nexport default Todo;\n","import Todo from '../models/todo';\n\nexport function todos(state = {}, action){\n  switch(action.type){\n    case 'ADD_TODO':\n      let todo = new Todo({text: action.text});\n\n      return {\n        ...state,\n        [todo.id]: todo\n      };\n\n    case 'TOGGLE_TODO':\n      let {id} = action;\n      return {\n        ...state,\n        [id]: {\n          ...state[id],\n          done: !state[id].done\n        }\n      };\n\n    case 'UPDATE_TODO':\n      return {\n        ...state,\n        [action.id]: {\n          ...state[action.id],\n          text: action.text\n        }\n      };\n\n    case 'REMOVE_TODO':\n      let newState = {...state};\n\n      delete newState[action.id];\n\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport function appReducer(state = {}, action){\n  return {\n    todos: todos(state.todos, action)\n  }\n}\n","/**\n * A class to handle localStorage operations\n */\nclass Storage {\n  /**\n   * Instaties a new storage object\n   * @param {string} key The key to save data under localStorage\n   */\n  constructor(key){\n    if(!this.canUseStorage) throw Error('Local storage is either full or disabled');\n\n    /**\n     * The current instance's localStorage key\n     * @type {string}\n     */\n    this.key = key;\n  }\n\n  /**\n   * A getter to check whether localStorage is usable\n   * @return {Boolean} Indicates wether localstorage is usable\n   */\n  get canUseStorage(){\n    var test = 'test';\n\n    try {\n      localStorage.setItem(test, test);\n      localStorage.getItem(test);\n      localStorage.removeItem(test);\n    } catch(e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Loads data from localStorage\n   * @param  {Object} [fallback={}] A fallback value in case our data does not exist in localStorage\n   * @return {any}               The parsed localStorage data\n   */\n  load(fallback = {}){\n    const jsonString = localStorage.getItem(this.key);\n\n    return jsonString ? JSON.parse(jsonString) : fallback;\n  }\n\n  /**\n   * Saves data to localStorage\n   * @param  {any} data The data to save\n   * @return {any}      The data to save\n   */\n  save(data){\n    const jsonString = JSON.stringify(data);\n\n    localStorage.setItem(this.key, jsonString);\n\n    return data;\n  }\n}\n\nexport default Storage;\n","/**\n * Generates a random number in the range between  a minimum and maximoum numbers\n * @param  {number} min The minimum number in our range\n * @param  {number} max The maximum number in our range\n * @return {number}     A random number in range\n */\nexport function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}\n\n/**\n * Picks a random item in an array\n * @param  {Array} array The array to pick a random item from\n * @return {any}         The random item in the array\n */\nexport function getRandomFromArray(array){\n  return array[getRandomIntInclusive(0, array.length - 1)];\n}\n\nexport function capitalize(string){\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","export const FILTERS = {\n  ALL: 'all',\n  COMPLETE: 'complete',\n  INCOMPLETE: 'incomplete'\n};\n","// External deps\nimport React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nimport {connect} from 'react-redux';\n\n// Modules\nimport {toggleTodo, updateTodo, removeTodo} from '../modules/actions';\n\n/**\n * A component to display a todo list item\n * @extends Component\n */\nclass TodoListItem extends Component {\n  // Event Handlers\n  /**\n   * Event handler to edit a todo item\n   * @param  {SyntheticEvent} event The current event's event object\n   */\n  editTodo = (event) => {\n    const {todo, updateTodo} = this.props;\n    /**\n     * The text of the todo from the event's text input\n     * @type {string}\n     */\n    const text = event.currentTarget.value.trim();\n\n    updateTodo(todo.id, text);\n  }\n\n  render(){\n    const {todo, toggleTodo, removeTodo} = this.props;\n\n    return (\n      <tr className=\"todo-item\">\n        <td>\n          <div className=\"custom-control custom-checkbox\">\n              <input\n                className=\"custom-control-input\"\n                defaultValue={todo.id}\n                id={`todo-done-${todo.id}`}\n                type=\"checkbox\"\n                checked={todo.done}\n                onChange={(e) => toggleTodo(todo.id)}\n              />\n              <label\n                className=\"custom-control-label\"\n                htmlFor={`todo-done-${todo.id}`}\n              >\n                &nbsp;\n              </label>\n            </div>\n        </td>\n        <td className=\"col-1\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            defaultValue={todo.text}\n            onChange={this.editTodo}\n          />\n        </td>\n        <td className=\"col-action\">\n          <FontAwesomeIcon\n            className=\"icon-remove\"\n            icon={faTrashAlt}\n            onClick={() => removeTodo(todo.id)}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapStoreToProps = () => ({});\nconst mapActionsToProps = {\n  toggleTodo: toggleTodo,\n  updateTodo: updateTodo,\n  removeTodo: removeTodo\n}\n\nexport default connect(\n  mapStoreToProps,\n  mapActionsToProps\n)(TodoListItem);\n","export function addTodo(text){\n  return {\n    type: 'ADD_TODO',\n    text\n  }\n}\n\nexport function toggleTodo(id){\n  return {\n    type: 'TOGGLE_TODO',\n    id\n  }\n}\n\nexport function updateTodo(id, text){\n  return {\n    type: 'UPDATE_TODO',\n    id,\n    text\n  }\n}\n\nexport function removeTodo(id){\n  return {\n    type: 'REMOVE_TODO',\n    id\n  }\n}\n","// External deps\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\n// Constansts\nimport { FILTERS } from '../modules/constants';\n\n// Components\nimport TodoListItem from './TodoListItem';\n\n/**\n * A functional component to display a list of todo items\n * @param {Array}    todos      The todos to display\n * @param {function} toggleTodo A callback to toggle a todo item\n * @param {function} updateTodo A callback to update a todo item\n * @param {function} removeTodo A callback to remove a todo item\n */\nclass TodoList extends Component {\n render() {\n   const {filter} = this.props;\n   const items = this.props.items.filter((todo) => {\n     switch(filter){\n       case FILTERS.COMPLETE:\n         return todo.done;\n       case FILTERS.INCOMPLETE:\n         return !todo.done;\n       default:\n         return true;\n     }\n   })\n\n    return (\n      <div className=\"todo-list\">\n        <table className=\"todo-items table table-borderless\">\n          <tbody>\n            {items.map((item) => (\n              <TodoListItem\n                key={item.id}\n                todo={item}\n              />)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStoreToProps = ({todos}) => ({\n  items: Object.values(todos)\n});\n\nexport default connect(mapStoreToProps)(TodoList);\n","// External deps\nimport React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\n\nimport { addTodo } from '../modules/actions';\n\n/**\n * A Component to display a add todo form\n * @extends Component\n */\nclass TodoForm extends Component {\n  // References\n  /**\n   * A react refernce to our input html element\n   * @type {Object}\n   */\n  todoInput = React.createRef();\n\n  // Event Handlers\n  /**\n   * An event handler to create a todo an clear a form\n   * @param  {SyntheticEvent} event The submit event object\n   */\n  createTodo = (event) => {\n    event.preventDefault();\n\n    const {addTodo} = this.props;\n    const todoText = this.todoInput.current.value.trim();\n\n    // Error message when Field is empty\n    const error = \"Field cannot be empty!\";\n\n    if (todoText.length === 0) {\n      return  alert(error);\n    }\n\n    addTodo(todoText);\n    event.target.reset();\n  }\n\n  // Lifecycle hooks\n  render(){\n    return (\n      <form className=\"input-group my-3\" onSubmit={this.createTodo}>\n        <input\n          name=\"todo_item\"\n          className=\"form-control required name\"\n          type=\"text\"\n          placeholder=\"Add a new to-do item ...\"\n          ref={this.todoInput}\n\n        />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-primary\" type=\"submit\">\n            <FontAwesomeIcon icon={faPlus} /> Add item\n          </button>\n          <div id=\"error\">{this.error}</div>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst mapStoreToProps = () => ({});\nconst mapActionsToProps = { addTodo: addTodo}\n\nexport default connect(\n  mapStoreToProps,\n  mapActionsToProps\n)(TodoForm);\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\n// Consts\nimport {FILTERS} from '../modules/constants';\n\n// modules\nimport {capitalize} from '../modules/helpers';\n\nconst Filter = (props) => {\n  const filterList = Object.values(FILTERS)\n\n  return (\n    <div className=\"todo-filters text-right\">\n      <div\n        className=\"btn-group btn-group-sm\"\n        role=\"group\"\n        aria-label=\"Set a filter to show items\"\n      >\n        {filterList\n          .map((filter, i) => (\n            <NavLink\n              key={i}\n              to={`/${filter}`}\n              className=\"filter-btn btn btn-light\"\n              activeClassName=\"active\"\n            >\n              {capitalize(filter)}\n            </NavLink>))}\n      </div>\n    </div>\n  )\n};\n\nexport default Filter;\n","import React, {Component, Fragment} from 'react';\n\nimport TodoList from '../components/TodoList';\nimport TodoForm from '../components/TodoForm';\nimport Filter from '../components/Filter';\n\nclass Home extends Component {\n  componentDidMount(){\n    document.title = 'What to do?';\n  }\n\n  render(){\n    const {filter} = this.props.match.params;\n\n    return (\n      <Fragment>\n        <TodoForm />\n        <Filter />\n        <TodoList filter={filter}/>\n      </Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\n\nclass NotFound extends Component{\n  componentDidMount(){\n    document.title = '404 not found | What to do?';\n  }\n\n  render(){\n    return (\n      <div className=\"not-found\">\n        <h2>404 NOT FOUND</h2>\n        <h3>Sorry Mz, It isn't here! go elsewhere</h3>\n      </div>\n\n    );\n  }\n}\n\nexport default NotFound;\n","import React, {Component, Fragment} from 'react';\n\nclass Help extends Component {\n  componentDidMount(){\n    document.title = 'Help | What to do?';\n  }\n\n  render(){\n    return (\n      <Fragment>\n        <h2>Get Some help</h2>\n        <dl>\n          <dt>Where is all my data stored?</dt>\n          <dd>All your data is stored <strong>in your own computer!</strong> Everything you put into the app is stored in what is called the localStorage of your browser</dd>\n          <dt>Will clearing the cache clear all my data as well?</dt>\n          <dd>Yes it will. Unless you decide not to clear localStorage when you clear your cache.</dd>\n        </dl>\n      </Fragment>\n    );\n  }\n}\n\nexport default Help;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboardList } from '@fortawesome/free-solid-svg-icons';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <p className=\"main-header\">Welcome to my TODO List Application\n          <span className=\"font-todo\"><FontAwesomeIcon icon={faClipboardList} /></span>\n        </p>\n      </header>\n    );\n  }\n}\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitterSquare, faFacebookSquare, faLinkedin, faInstagram, faInternetExplorer } from '@fortawesome/free-brands-svg-icons';\n\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <p>&copy; 2020 Zakaria Moslim</p>\n          <div className=\"justify-content-center  d-flex\">\n            <ul className=\"list-unstyled \">\n              <li className=\"list-inline-item\">\n                <a href=\"https://www.instagram.com/zaa_aak/\" className=\"link-social-anim\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon icon={faInstagram} size=\"2x\"/>\n                </a>\n              </li>\n              <li className=\"list-inline-item\">\n                <a href=\"https://twitter.com/zakaria_m\" className=\"link-social-anim\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon icon={faTwitterSquare} size=\"2x\"/>\n                </a>\n              </li>\n              <li className=\"list-inline-item\">\n                <a href=\"https://www.facebook.com/Zak.Mus\" className=\"link-social-anim\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon icon={faFacebookSquare} size=\"2x\"/>\n                </a>\n              </li>\n              <li className=\"list-inline-item\">\n                <a href=\"https://www.linkedin.com/in/zakmos\" className=\"link-social-anim\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon icon={faLinkedin} size=\"2x\"/>\n                </a>\n              </li>\n              <li className=\"list-inline-item\">\n                <a href=\"https://ZakMos.github.io\" className=\"link-social-anim\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon icon={faInternetExplorer} size=\"2x\" />\n                </a>\n              </li>\n            </ul>\n          </div>\n      </footer>\n    );\n  }\n}\n\n\nexport default Footer;\n","// External deps\nimport React, {Component} from 'react';\n\n/**\n * A react component to display the current time\n * @extends Component\n */\nclass Clock extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      date: new Date()\n    }\n  }\n\n  /**\n   * A function to update the state with the current time\n   */\n  tick(){\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  // Lifecycle hooks\n  /**\n   * A method called once when a component is loaded into the DOM\n   * Sets an interval on when to call tick\n   */\n  componentDidMount() {\n    /**\n     * The ID of our timer interval\n     * @type {number}\n     */\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  /**\n   * A method called once before the component is removed from the DOM\n   * Terminates our timerprocess saved in this.timerID\n   */\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render(){\n    const {date} = this.state;\n\n    return (\n      <p>It is now: {date.toLocaleTimeString('de')}</p>\n    );\n  }\n}\n\nexport default Clock;\n","// External deps\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { UncontrolledCollapse, Button, CardBody, Card } from 'reactstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\n// Components\nimport Clock from './Clock';\nimport Help from '../views/Help';\n/**\n * A React Functional Component\n * {@link https://reactjs.org/docs/components-and-props.html#functional-and-class-components | React Docs}\n * @param {string} tagline The tagline to print\n */\nconst TodoHeader = ({tagline}) => (\n  <div className=\"todo-header\">\n    <h1><NavLink to=\"/\">What to do?</NavLink></h1>\n    <p className=\"tagline tracking-in-contract\">{tagline}</p>\n    <Clock />\n    <div>\n    <Button color=\"primary\" className=\"help\" id=\"help\">\n      <FontAwesomeIcon icon={faQuestionCircle} title=\"Click for Help\" />\n    </Button>\n    <UncontrolledCollapse toggler=\"#help\">\n      <Card>\n        <CardBody>\n          <Help />\n        </CardBody>\n      </Card>\n    </UncontrolledCollapse>\n    </div>\n  </div>\n);\n\n\n\nexport default TodoHeader;\n","// External deps\nimport React, {Component, Fragment} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n// Modules\nimport {getRandomFromArray} from './modules/helpers';\nimport {FILTERS} from './modules/constants';\n\n// Views\nimport Home from './views/Home';\nimport NotFound from './views/NotFound';\nimport Help from './views/Help';\n\n// Components\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport TodoHeader from './components/TodoHeader';\n\n/**\n * A class to represent our main app content\n * @extends Component\n */\nclass App extends Component {\n\n  randomTagline = getRandomFromArray([\n    'This could be your wish list',\n    'What do you want to do today?',\n    'Get stuff done!',\n    'Just do it!'\n  ]);\n\n  /**\n   * A mothod called whenever a component is added or changed in the DOM\n   * @return {Object} An object representing the html to render\n   */\n  render(){\n    const filterOptions = Object.values(FILTERS).join('|');\n    return (\n      <Router>\n        <Fragment>\n          <Header />\n          <article className=\"container\">\n            <TodoHeader tagline={this.randomTagline} />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path={`/:filter(${filterOptions})`} component={Home} />\n              <Route exact path=\"/help\" component={Help} />\n              <Route component={NotFound} />\n            </Switch>\n          </article>\n          <Footer />\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// External deps\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n// Production optimization\nimport registerServiceWorker from './registerServiceWorker';\n\n// Modules\nimport { appReducer } from './modules/reducers';\nimport Storage from './modules/storage';\n\n// Components\nimport App from './App';\n\n// Styles\nimport './styles/main.css';\n\nconst storage = new Storage('todo-live');\n\n// Create our redux store\nconst store = createStore(\n  appReducer,\n  storage.load(),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nstore.subscribe(() => {\n  storage.save(store.getState())\n})\n\n// Uses render from react-dom to render the initial application into an element\n// with id of 'root'\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// Calls the registerServiceWorker to optimnize the appliction for production\nregisterServiceWorker();\n"],"sourceRoot":""}